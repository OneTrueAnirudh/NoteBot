from docx import Document
from docx.shared import Pt
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from g4f.client import Client

class TextSummarizer:
    def __init__(self):
        # Initialize the LLM client if needed
        self.client = Client()
    
    def llm_summary(self, keyword, chunks):
        """Queries the LLM to summarize chunks for a specific keyword or a group of keywords, with bullet points."""
        prompt = f"Using the following text segments that describe the keyword {keyword}:\n\n{chunks}\n\nPlease summarize the key points as bullet points. Each bullet point should describe an important takeaway from the provided information. Format your response as a list of bullet points."
        
        while True:
            try:
                response = self.client.chat.completions.create(
                    model="gpt-4o",
                    messages=[{"role": "user", "content": prompt}],
                )
                result = response.choices[0].message.content
                if "Model not found or too long input. Or any other error (xD)" in result:
                    print("Error: Model not found or input too long, retrying...")
                    continue  
                if "Generated by BLACKBOX.AI, try unlimited chat https://www.blackbox.ai" in result:
                    result = result.replace("Generated by BLACKBOX.AI, try unlimited chat https://www.blackbox.ai", "").strip()
                bullet_points = [point.strip().lstrip("-").strip() for point in result.split("\n") if point.strip()]                
                return bullet_points            
            except Exception as e:
                print(f"An error occurred: {e}. Retrying...")
                continue  
    
    def create_word_document(self, content_dict, name="notes.docx"):
        """Generates a Word document with structured content from LLM, including bullet points."""
        doc = Document()
        for keyword, bullet_points in content_dict.items():
            heading_paragraph = doc.add_paragraph("")
            heading_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
            heading_run = heading_paragraph.add_run(keyword)
            heading_run.bold = True
            heading_run.font.name = 'Times New Roman'
            heading_run.font.size = Pt(14)
            for point in bullet_points:
                paragraph = doc.add_paragraph(point, style='List Bullet')
                paragraph_format = paragraph.style.font
                paragraph_format.size = Pt(13)
                paragraph_format.name = 'Times New Roman'
        doc.save(name)

    def process_all_chunks(self, chunks_by_keyword):
        """Combines all chunks per keyword, generates a summary, and adds to dictionary."""
        summaries = {}
        for keyword, chunks in chunks_by_keyword.items():
            combined_chunks = " ".join(chunks)
            bullet_points = self.llm_summary(keyword, combined_chunks)
            summaries[keyword] = bullet_points
        return summaries
    
    def process_each_chunk_set(self, chunks_by_keyword):
        """Processes and summarizes chunks per keyword in a sequential manner."""
        summaries = {}
        for keyword, chunks in chunks_by_keyword.items():
            bullet_points = self.llm_summary(keyword, " ".join(chunks))
            summaries[keyword] = bullet_points
        return summaries

chunks_by_keyword = {
    "Medical Imaging Analysis": [
        "AI-powered medical imaging analysis uses deep learning algorithms to interpret radiology images, such as X-rays, MRIs, and CT scans, with a high level of accuracy. By automating image recognition, AI assists radiologists in detecting conditions like tumors, fractures, and infections more quickly and accurately.",
        "Convolutional Neural Networks (CNNs) are widely used in medical imaging, as they excel at identifying patterns in image data. These algorithms can be trained on large datasets to detect abnormalities, reducing human error and improving diagnostic accuracy, especially in detecting subtle signs of disease.",
        "Medical imaging AI systems have shown promise in detecting diseases early, sometimes even before symptoms appear. In oncology, for instance, AI is used to detect early-stage cancers, enhancing treatment options and improving patient outcomes through timely interventions."
    ],
    "Predictive Analytics in Patient Care": [
        "Predictive analytics in healthcare leverages patient data to forecast potential health events, enabling proactive care. By analyzing patterns in historical health records, AI systems can predict risks such as heart attacks, strokes, and diabetic complications, allowing healthcare providers to intervene earlier.",
        "Machine learning models for predictive analytics consider various data points, including patient demographics, lifestyle factors, lab results, and genetic information. These models can identify high-risk patients, aiding in creating tailored care plans that reduce hospital readmissions and improve quality of life.",
        "AI-driven predictive analytics has applications beyond individual patient care, such as forecasting disease outbreaks or managing hospital resources. For example, hospitals use predictive models to anticipate bed occupancy and staffing needs, ensuring that healthcare systems are prepared for sudden demand surges."
    ],
    "Healthcare Data Privacy and Security": [
        "Healthcare data privacy is a critical concern in AI applications, as medical records contain sensitive information that requires stringent protection. AI systems must comply with regulations like HIPAA in the U.S., ensuring that patient data is handled securely and only accessible to authorized users.",
        "Securing healthcare data in AI applications involves techniques such as data encryption, secure access protocols, and anonymization. By implementing these measures, healthcare organizations can protect patient privacy while still harnessing data for AI-driven insights.",
        "The rise of AI in healthcare also raises challenges around data ownership and consent. Patients may not always be aware of how their data is used in AI training. Ethical guidelines are needed to ensure transparency and build public trust in AI's role in healthcare, fostering a balance between innovation and privacy protection."
    ]
}

# summarizer = TextSummarizer()

# # Option 1: Process all chunks at once (for each keyword)
# all_chunks_summary = summarizer.process_all_chunks(chunks_by_keyword)
# summarizer.create_word_document(all_chunks_summary, name="all.docx")

# # # Option 2: Process each keywordâ€™s chunks separately
# individual_summaries = summarizer.process_each_chunk_set(chunks_by_keyword)
# summarizer.create_word_document(individual_summaries, name="ind.docx")
